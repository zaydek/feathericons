@use "sass:color";

@use "../../duomo" as *;
@use "../../duomo/mixins" as *;
@use "../../duomo/tailwind" as *;
@use "vars" as *;

.css-search-results-grid {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(rem(144), 1fr));
}

.css-search-results-grid-item {
	position: relative;
	&::after {
		@include zero-out { content: ""; }
		// TODO: Change to color.scale
		background-color: color.adjust(tw(blue, 400), $alpha: -0.75);
		border-radius: 9999px;
		opacity: 0;
		transform: scale(0);
		transition: $leave-ms /* TODO: Add property */ tw(ease, out);
	}
	// Cannot use &::after { &:hover { ... } }
	// so use &:hover::after { ... }
	&:hover::after {
		opacity: 1;
		transform: scale(0.618);
		transition: $enter-ms /* TODO: Add property */ tw(ease, out);
	}
}

.css-search-results-grid-item-svg {
	color: tw(cool-gray, 800);
	transition: $leave-ms tw(ease, out);
	.css-search-results-grid-item:hover & {
		color: tw(blue, 600);
		transition: $enter-ms /* TODO: Add property */ tw(ease, out);
	}
}

.css-search-results-text {
	text-align: center;
	font: rem(13) / 1.125 tw(mono);

	color: tw(cool-gray, 800);
	transform: translateX(rem(13 * 1.125));
	transition: $leave-ms tw(ease, out);
	.css-search-results-text-box:hover & {
		color: tw(blue, 600);
		transform: translateX(0);
		transition: $enter-ms transform, tw(ease, out) 100ms;
	}
}

.css-search-results-text-svg {
	@include size(rem(13 * 1.125));

	color: tw(cool-gray, 400);
	opacity: 0;
	transform: translateX(rem(-1 * 13 * 1.125));
	transition: $leave-ms tw(ease, out);
	.css-search-results-text-box:hover & {
		color: tw(blue, 600);
		opacity: 1;
		transform: translateX(0);
		transition: $enter-ms transform, tw(ease, out) 100ms;
	}
}
